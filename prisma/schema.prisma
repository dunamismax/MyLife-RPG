
// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(cuid())
  email     String    @unique
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  stats     Stats?
  quests    Quest[]
  habits    Habit[]
  achievements Achievement[]
  statusEffects StatusEffect[]
}

model Stats {
  id          String   @id @default(cuid())
  user        User     @relation(fields: [userId], references: [id])
  userId      String   @unique    
  level       Int      @default(1)
  xp          Int      @default(0)
  hp          Int      @default(100)
  strength    Int      @default(10)
  endurance   Int      @default(10)
  intelligence Int     @default(10)
  wisdom      Int      @default(10)
  charisma    Int      @default(10)
  willpower   Int      @default(10)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Quest {
  id          String   @id @default(cuid())
  title       String
  description String?
  type        String   @default("daily") // daily, weekly, major
  xpReward    Int
  difficulty  String? // Easy, Medium, Hard
  statsAffected String? // e.g., "+2 WIS, +1 HP"
  hpAffected  Int? // direct HP change
  completed   Boolean  @default(false)
  dueDate     DateTime?
  isRecurring Boolean  @default(false)
  recurrencePattern String? // e.g., "daily", "weekly", "monthly"
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Habit {
  id          String   @id @default(cuid())
  title       String
  description String?
  type        String   @default("good") // good, bad
  xpReward    Int? // XP reward for completing a good habit
  statsAffected String? // e.g., "+1 STR"
  hpAffected  Int? // direct HP change
  streak      Int      @default(0)
  lastCompleted DateTime?
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Achievement {
  id          String   @id @default(cuid())
  name        String
  description String?
  condition   String // e.g., "Complete 7 daily quests in a row"
  reward      String? // e.g., "+1 to all stats"
  unlocked    Boolean  @default(false)
  unlockedAt  DateTime?
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model StatusEffect {
  id          String   @id @default(cuid())
  name        String
  description String?
  cause       String? // e.g., "Substance use"
  duration    String? // e.g., "4-6 hours", "24 hours"
  penalty     String? // e.g., "-20% INT & WIS effectiveness"
  isActive    Boolean  @default(true)
  appliedAt   DateTime @default(now())
  expiresAt   DateTime?
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
